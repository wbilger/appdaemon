$(function(){ //DOM Ready

    function navigate(url)
    {
        window.location.href = url;
    }

    $(document).attr("title", "Home");
    content_width = (28 + 1) * 12 + 1
    $('.gridster').width(content_width)
    $(".gridster ul").gridster({
        widget_margins: [1, 1],
        widget_base_dimensions: [28, 28],
        avoid_overlapped_widgets: true,
        max_rows: 15,
        max_size_x: 12,
        shift_widgets_up: false
    }).data('gridster').disable();
    
    // Add Widgets

    var gridster = $(".gridster ul").gridster().data('gridster');
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baserss-default-rss-weather" id="default-rss-weather"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><h1 class="text" data-bind="html: text, attr:{ style: text_style}"></h1></div></li>', 12, 1, 1, 1)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseweather-default-weather" id="default-weather"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><div data-bind="attr: {style: main_style}">	<p class="primary-climacon" data-bind="html: dark_sky_icon"></p>	<p class="primary-info" data-bind="text: dark_sky_temperature"></p>	<p class="primary-unit" data-bind="html: unit, attr: {style: unit_style}"></p><div data-bind="attr: {style: sub_style}">	<p class="secondary-info" data-bind="text: dark_sky_daily_low_temperature"></p>	<p class="secondary-info">/</p>	<p class="secondary-info" data-bind="text: dark_sky_daily_high_temperature"></p>	<p class="secondary-info" data-bind="attr: {style: main_style}">&nbsp;Feel:</p>	<p class="secondary-info" data-bind="html: dark_sky_apparent_temperature, attr: {style: main_style}"></p>	<p class="secondary-info">&nbsp;</p>	<p class="secondary-info" data-bind="html: dark_sky_daily_low_apparent_temperature"></p>	<p class="secondary-info">/</p>	<p class="secondary-info" data-bind="html: dark_sky_daily_high_apparent_temperature"></p>	<br>	<p class="secondary-info">Precip:&nbsp;</p>	<p class="secondary-info" data-bind="text: dark_sky_precip_probability"></p>	<p class="secondary-info">%</p>	<p class="secondary-info">&nbsp;(</p>	<p class="secondary-info" data-bind="text: dark_sky_precip_intensity"></p>	<p class="secondary-info">mm)</p></div></div></li>', 12, 3, 1, 2)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-front-porch" id="default-front-porch"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 2, 4, 1, 5)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-front-entrance-way" id="default-front-entrance-way"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 4, 4, 3, 5)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-front-entrance" id="default-front-entrance"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 2, 4, 7, 5)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-base_light_with_brightness-default-front-window" id="default-front-window"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="iconcontainer" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><div class="slidercontainer"><input type="range" data-bind="attr: {min: MinValue, max: MaxValue, step: StepValue, style: slider_style}, value: Brightness" ></div></div></li>', 4, 4, 9, 5)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-kitchen-island-night" id="default-kitchen-island-night"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 2, 4, 1, 9)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baselight-default-kitchen-island" id="default-kitchen-island"><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><span class="toggle-area" id="switch"></span><p class="state_text" data-bind="text: state_text, attr:{style: state_text_style}"></p><div class="levelunit"><p class="level" data-bind="text: level, attr:{style: level_style}"></p><p class="unit" data-bind="html: units, attr:{style: unit_style}"></p></div><p class="secondary-icon minus"><i data-bind="attr: {class: icon_down, style: level_down_style}" id="level-down"></i></p><p class="secondary-icon plus"><i data-bind="attr: {class: icon_up, style: level_up_style}" id="level-up"></i></p></div></li>', 4, 4, 3, 9)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-kitchen-island-max" id="default-kitchen-island-max"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 2, 4, 7, 9)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-base_light_with_brightness-default-jenn-bedroom" id="default-jenn-bedroom"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="iconcontainer" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><div class="slidercontainer"><input type="range" data-bind="attr: {min: MinValue, max: MaxValue, step: StepValue, style: slider_style}, value: Brightness" ></div></div></li>', 4, 4, 9, 9)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseselect_thin-default-kitchen-radio-station" id="default-kitchen-radio-station"><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><div class="styled-select" data-bind="attr:{style: selectcontainer_style}">  <select data-bind="options: inputoptions, value: selectedoption, attr:{style: select_style}">  </select></div></div></li>', 8, 2, 1, 13)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basebutton-default-kitchen-radio-station-p1" id="default-kitchen-radio-station-p1"><span class="toggle-area" id="button_script"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 2, 3, 9, 13)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basebutton-default-kitchen-radio-station-p2" id="default-kitchen-radio-station-p2"><span class="toggle-area" id="button_script"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 2, 3, 11, 13)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basemedia-default-kitchen-speaker" id="default-kitchen-speaker"><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="artist" data-bind="text: artist, attr:{style: artist_style}"></h1><h1 class="media_title" data-bind="text: media_title, attr:{style: media_title_style}"></h1><h1 class="album" data-bind="text: album, attr:{style: album_style}"></h1><h2 id="previous" class="previous" data-bind="attr:{style: previous_icon_style}"><i data-bind="attr: {class: previous_icon}"></i></h2><h2 id="play" class="play" data-bind="attr:{style: play_icon_style}"><i data-bind="attr: {class: play_icon}"></i></h2><h2 id="next" class="next" data-bind="attr:{style: next_icon_style}"><i data-bind="attr: {class: next_icon}"></i></h2><p class="state_text" data-bind="text: state_text, attr:{style: state_text_style}"></p><div class="levelunit"><p class="level" data-bind="text: level, attr:{style: level_style}"></p><p class="unit" data-bind="attr:{style: units_style}">%</p></div><p class="secondary-icon minus"><i data-bind="attr: {class: icon_down, style: level_down_style}" id="level-down"></i></p><p class="secondary-icon plus"><i data-bind="attr: {class: icon_up, style: level_up_style}" id="level-up"></i></p></div></li>', 8, 8, 1, 15)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basebutton-default-kitchen-radio-station-p3" id="default-kitchen-radio-station-p3"><span class="toggle-area" id="button_script"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 2, 3, 9, 16)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basebutton-default-kitchen-radio-station-p4" id="default-kitchen-radio-station-p4"><span class="toggle-area" id="button_script"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 2, 3, 11, 16)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch_hor-default-kitchen-outside-speakers-group" id="default-kitchen-outside-speakers-group"><span class="toggle-area" id="switch_hor"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 4, 2, 9, 19)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch_hor-default-kitchen-bedroom-speaker-group" id="default-kitchen-bedroom-speaker-group"><span class="toggle-area" id="switch_hor"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 4, 2, 9, 21)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basenavigate-default-load-main-panel" id="default-load-main-panel"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2></div></li>', 3, 3, 1, 24)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basenavigate-default-load-familyroom-panel" id="default-load-familyroom-panel"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2></div></li>', 3, 3, 4, 24)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basenavigate-default-load-theatre-panel" id="default-load-theatre-panel"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2></div></li>', 3, 3, 7, 24)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basenavigate-default-load-bedroom-panel" id="default-load-bedroom-panel"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2></div></li>', 3, 3, 10, 24)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basenavigate-default-load-sensors-panel" id="default-load-sensors-panel"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2></div></li>', 3, 3, 1, 27)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basenavigate-default-load-weather" id="default-load-weather"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2></div></li>', 3, 3, 4, 27)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basenavigate-default-load-settings" id="default-load-settings"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2></div></li>', 3, 3, 7, 27)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basenavigate-default-reload" id="default-reload"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2></div></li>', 3, 3, 10, 27)
    
    
    
    var widgets = {}
    // Initialize Widgets
    
        widgets["default-rss-weather"] = new baserss("default-rss-weather", "", "default", {'widget_type': 'baserss', 'entity': 'rss_weather_alerts', 'fields': {'title': '', 'title2': '', 'text': ''}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'text_style': 'color: #00aaff;', 'widget_style': 'background-color: #444;font-size: 75%;'}, 'css': {}, 'icons': [], 'static_icons': [], 'widget_style': 'font-size: 75%;', 'interval': 30})
    
        widgets["default-weather"] = new baseweather("default-weather", "", "default", {'widget_type': 'baseweather', 'fields': {'title': '', 'unit': '', 'dark_sky_icon': '', 'dark_sky_temperature': '', 'dark_sky_daily_low_temperature': '', 'dark_sky_daily_high_temperature': '', 'dark_sky_apparent_temperature': '', 'dark_sky_daily_low_apparent_temperature': '', 'dark_sky_daily_high_apparent_temperature': '', 'dark_sky_precip_probability': '', 'dark_sky_precip_intensity': ''}, 'css': {}, 'static_css': {'title_style': 'color: #00aaff;', 'unit_style': 'color: #ffaa00;font-size: 125%;', 'main_style': 'color: #ffaa00;', 'sub_style': 'color: #00aaff;', 'widget_style': 'background-color: #444;font-size: 75%;'}, 'icons': [], 'static_icons': [], 'units': '&deg;C', 'widget_style': 'font-size: 75%;'})
    
        widgets["default-front-porch"] = new baseswitch("default-front-porch", "", "default", {'widget_type': 'baseswitch', 'entity': 'light.front_porch_light', 'state_active': 'on', 'state_inactive': 'off', 'enable': 1, 'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'light.front_porch_light'}, 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'light.front_porch_light'}, 'fields': {'title': 'Front Porch', 'title2': '', 'icon': '', 'icon_style': '', 'state_text': ''}, 'icons': {'icon_on': 'mdi-lightbulb-on-outline', 'icon_off': 'mdi-lightbulb-outline'}, 'static_icons': [], 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'state_text_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'icon_off': 'mdi-lightbulb-outline', 'icon_on': 'mdi-lightbulb-on-outline'})
    
        widgets["default-front-entrance-way"] = new baseswitch("default-front-entrance-way", "", "default", {'widget_type': 'baseswitch', 'entity': 'group.entrance_way_lights', 'state_active': 'on', 'state_inactive': 'off', 'enable': 1, 'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'group.entrance_way_lights'}, 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'group.entrance_way_lights'}, 'fields': {'title': 'Front Entrance Lights', 'title2': '', 'icon': '', 'icon_style': '', 'state_text': ''}, 'icons': {'icon_on': 'mdi-lightbulb-on', 'icon_off': 'mdi-lightbulb'}, 'static_icons': [], 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'state_text_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'icon_off': 'mdi-lightbulb', 'icon_on': 'mdi-lightbulb-on'})
    
        widgets["default-front-entrance"] = new baseswitch("default-front-entrance", "", "default", {'widget_type': 'baseswitch', 'entity': 'light.entrance_light', 'state_active': 'on', 'state_inactive': 'off', 'enable': 1, 'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'light.entrance_light'}, 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'light.entrance_light'}, 'fields': {'title': 'Entrance Way', 'title2': '', 'icon': '', 'icon_style': '', 'state_text': ''}, 'icons': {'icon_on': 'mdi-ceiling-light', 'icon_off': 'mdi-ceiling-light'}, 'static_icons': [], 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'state_text_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'icon_off': 'mdi-ceiling-light', 'icon_on': 'mdi-ceiling-light'})
    
        widgets["default-front-window"] = new base_light_with_brightness("default-front-window", "", "default", {'widget_type': 'base_light_with_brightness', 'entity': 'light.front_window', 'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'light.front_window'}, 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'light.front_window'}, 'fields': {'title': 'Front Window', 'title2': '', 'Brightness': '', 'MinValue': '0', 'MaxValue': '255', 'StepValue': '1', 'icon': '', 'icon_style': ''}, 'icons': {'icon_on': 'mdi-lightbulb-on-outline', 'icon_off': 'mdi-lightbulb-outline'}, 'static_icons': [], 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'slider_style': 'color: green;', 'widget_style': 'background-color: #444;'}, 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'icon_off': 'mdi-lightbulb-outline', 'icon_on': 'mdi-lightbulb-on-outline', 'slider_style': 'color: green;'})
    
        widgets["default-kitchen-island-night"] = new baseswitch("default-kitchen-island-night", "", "default", {'widget_type': 'baseswitch', 'entity': 'script.kitchen_island_lights_night', 'state_inactive': 'off', 'state_active': 'on', 'enable': 1, 'momentary': 1000, 'ignore_state': 1, 'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'script.kitchen_island_lights_night'}, 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'script.kitchen_island_lights_night'}, 'fields': {'title': 'Island Dim', 'title2': '', 'icon': '', 'icon_style': '', 'state_text': ''}, 'icons': {'icon_on': 'mdi-weather-night', 'icon_off': 'mdi-weather-night'}, 'static_icons': [], 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'state_text_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'icon_off': 'mdi-weather-night', 'icon_on': 'mdi-weather-night'})
    
        widgets["default-kitchen-island"] = new baselight("default-kitchen-island", "", "default", {'widget_type': 'baselight', 'entity': 'group.kitchen_island_lights', 'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'group.kitchen_island_lights'}, 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'group.kitchen_island_lights'}, 'fields': {'title': 'Kitchen Island', 'title2': '', 'icon': '', 'units': '%', 'level': '', 'state_text': '', 'icon_style': ''}, 'icons': {'icon_on': 'mdi-lightbulb-on', 'icon_off': 'mdi-lightbulb'}, 'static_icons': {'icon_up': 'fa-plus', 'icon_down': 'fa-minus'}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'state_text_style': 'color: #fff;', 'level_style': 'color: #fff;', 'unit_style': 'color: #fff;', 'level_up_style': 'color: #888;', 'level_down_style': 'color: #888;', 'widget_style': 'background-color: #444;'}, 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'icon_off': 'mdi-lightbulb', 'icon_on': 'mdi-lightbulb-on', 'monitored_entity': 'light.kitchen_island_2'})
    
        widgets["default-kitchen-island-max"] = new baseswitch("default-kitchen-island-max", "", "default", {'widget_type': 'baseswitch', 'entity': 'script.kitchen_island_lights_bright', 'state_inactive': 'off', 'state_active': 'on', 'enable': 1, 'momentary': 1000, 'ignore_state': 1, 'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'script.kitchen_island_lights_bright'}, 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'script.kitchen_island_lights_bright'}, 'fields': {'title': 'Island Bright', 'title2': '', 'icon': '', 'icon_style': '', 'state_text': ''}, 'icons': {'icon_on': 'mdi-lightbulb-on', 'icon_off': 'mdi-lightbulb-on'}, 'static_icons': [], 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'state_text_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'icon_off': 'mdi-lightbulb-on', 'icon_on': 'mdi-lightbulb-on'})
    
        widgets["default-jenn-bedroom"] = new base_light_with_brightness("default-jenn-bedroom", "", "default", {'widget_type': 'base_light_with_brightness', 'entity': 'light.jenn_bedroom', 'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'light.jenn_bedroom'}, 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'light.jenn_bedroom'}, 'fields': {'title': 'Jenn Bedroom', 'title2': '', 'Brightness': '', 'MinValue': '0', 'MaxValue': '255', 'StepValue': '1', 'icon': '', 'icon_style': ''}, 'icons': {'icon_on': 'mdi-lightbulb-on-outline', 'icon_off': 'mdi-lightbulb-outline'}, 'static_icons': [], 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'slider_style': '', 'widget_style': 'background-color: #444;'}, 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'icon_off': 'mdi-lightbulb-outline', 'icon_on': 'mdi-lightbulb-on-outline'})
    
        widgets["default-kitchen-radio-station"] = new baseselect_thin("default-kitchen-radio-station", "", "default", {'widget_type': 'baseselect_thin', 'entity': 'input_select.kitchen_radio_station', 'post_service': {'service': 'input_select/select_option', 'entity_id': 'input_select.kitchen_radio_station'}, 'fields': {'title': 'Station Select', 'inputoptions': [], 'selectedoption': ''}, 'icons': [], 'css': {}, 'static_icons': {}, 'static_css': {'title_style': 'color: #fff;', 'select_style': 'background-color: #999;color:black;', 'widget_style': 'background-color: #444;background: darkgray;', 'selectcontainer_style': ''}, 'widget_style': 'background: darkgray;'})
    
        widgets["default-kitchen-radio-station-p1"] = new basebutton("default-kitchen-radio-station-p1", "", "default", {'widget_type': 'basebutton', 'entity': 'input_select.kitchen_radio_station_p1', 'state_active': '', 'enable': 1, 'post_service_active': {'service': 'script/turn_on', 'entity_id': 'script.kitchen_radio_station_p1'}, 'fields': {'title': 'Preset', 'title2': '', 'icon': '', 'icon_style': '', 'state_text': ''}, 'icons': {'icon_on': 'mdi-numeric-1-box', 'icon_off': 'mdi-numeric-1-box'}, 'static_icons': [], 'css': {'icon_style_active': 'color: #888;', 'icon_style_inactive': 'color: #888;'}, 'static_css': {'title_style': 'color: #888;', 'title2_style': 'color: #fff;', 'state_text_style': 'color: #fff;', 'widget_style': 'background-color: #444;background: darkgray;'}, 'icon_off': 'mdi-numeric-1-box', 'icon_on': 'mdi-numeric-1-box', 'widget_style': 'background: darkgray;', 'title_style': 'color: #888;', 'button_icon_style_inactive': 'color: #888;', 'state_text': 1})
    
        widgets["default-kitchen-radio-station-p2"] = new basebutton("default-kitchen-radio-station-p2", "", "default", {'widget_type': 'basebutton', 'entity': 'input_select.kitchen_radio_station_p2', 'state_active': '', 'enable': 1, 'post_service_active': {'service': 'script/turn_on', 'entity_id': 'script.kitchen_radio_station_p2'}, 'fields': {'title': 'Preset', 'title2': '', 'icon': '', 'icon_style': '', 'state_text': ''}, 'icons': {'icon_on': 'mdi-numeric-2-box', 'icon_off': 'mdi-numeric-2-box'}, 'static_icons': [], 'css': {'icon_style_active': 'color: #888;', 'icon_style_inactive': 'color: #888;'}, 'static_css': {'title_style': 'color: #888;', 'title2_style': 'color: #fff;', 'state_text_style': 'color: #fff;', 'widget_style': 'background-color: #444;background: darkgray;'}, 'icon_off': 'mdi-numeric-2-box', 'icon_on': 'mdi-numeric-2-box', 'widget_style': 'background: darkgray;', 'title_style': 'color: #888;', 'button_icon_style_inactive': 'color: #888;', 'state_text': 1})
    
        widgets["default-kitchen-speaker"] = new basemedia("default-kitchen-speaker", "", "default", {'widget_type': 'basemedia', 'entity': 'media_player.kitchen_speaker', 'post_service_next': {'service': 'media_player/media_next_track', 'entity_id': 'media_player.kitchen_speaker'}, 'post_service_previous': {'service': 'media_player/media_previous_track', 'entity_id': 'media_player.kitchen_speaker'}, 'post_service_play_pause': {'service': 'media_player/media_play_pause', 'entity_id': 'media_player.kitchen_speaker'}, 'post_service_pause': {'service': 'media_player/media_pause', 'entity_id': 'media_player.kitchen_speaker'}, 'post_service_stop': {'service': 'media_player/media_stop', 'entity_id': 'media_player.kitchen_speaker'}, 'post_service_level': {'service': 'media_player/volume_set', 'entity_id': 'media_player.kitchen_speaker'}, 'fields': {'title': 'Kitchen Google Home', 'artist': '', 'media_title': '', 'album': '', 'play_icon_style': '', 'pause_icon_style': '', 'previous_icon_style': '', 'next_icon_style': '', 'state_text': '', 'level': ''}, 'icons': {'play_icon': 'fa-play', 'pause_icon': 'fa-pause'}, 'static_icons': {'previous_icon': 'fa-step-backward', 'next_icon': 'fa-step-forward', 'icon_up': 'fa-plus', 'icon_down': 'fa-minus'}, 'static_css': {'previous_icon_style': 'color: #888;', 'next_icon_style': 'color: #888;', 'title_style': 'color: #fff;', 'artist_style': 'color: #00aaff;', 'album_style': 'color: #00aaff;', 'media_title_style': 'color: #00aaff;', 'state_text_style': 'color: #fff;', 'level_style': 'color: #fff;', 'level_up_style': 'color: #888;', 'level_down_style': 'color: #888;', 'widget_style': 'background-color: #444;background: lightgray;', 'units_style': 'color: #fff;'}, 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'widget_style': 'background: lightgray;'})
    
        widgets["default-kitchen-radio-station-p3"] = new basebutton("default-kitchen-radio-station-p3", "", "default", {'widget_type': 'basebutton', 'entity': 'input_select.kitchen_radio_station_p3', 'state_active': '', 'enable': 1, 'post_service_active': {'service': 'script/turn_on', 'entity_id': 'script.kitchen_radio_station_p3'}, 'fields': {'title': 'Preset', 'title2': '', 'icon': '', 'icon_style': '', 'state_text': ''}, 'icons': {'icon_on': 'mdi-numeric-3-box', 'icon_off': 'mdi-numeric-3-box'}, 'static_icons': [], 'css': {'icon_style_active': 'color: #888;', 'icon_style_inactive': 'color: #888;'}, 'static_css': {'title_style': 'color: #888;', 'title2_style': 'color: #fff;', 'state_text_style': 'color: #fff;', 'widget_style': 'background-color: #444;background: darkgray;'}, 'icon_off': 'mdi-numeric-3-box', 'icon_on': 'mdi-numeric-3-box', 'widget_style': 'background: darkgray;', 'title_style': 'color: #888;', 'button_icon_style_inactive': 'color: #888;', 'state_text': 1})
    
        widgets["default-kitchen-radio-station-p4"] = new basebutton("default-kitchen-radio-station-p4", "", "default", {'widget_type': 'basebutton', 'entity': 'input_select.kitchen_radio_station_p4', 'state_active': '', 'enable': 1, 'post_service_active': {'service': 'script/turn_on', 'entity_id': 'script.kitchen_radio_station_p4'}, 'fields': {'title': 'Preset', 'title2': '', 'icon': '', 'icon_style': '', 'state_text': ''}, 'icons': {'icon_on': 'mdi-numeric-4-box', 'icon_off': 'mdi-numeric-4-box'}, 'static_icons': [], 'css': {'icon_style_active': 'color: #888;', 'icon_style_inactive': 'color: #888;'}, 'static_css': {'title_style': 'color: #888;', 'title2_style': 'color: #fff;', 'state_text_style': 'color: #fff;', 'widget_style': 'background-color: #444;background: darkgray;'}, 'icon_off': 'mdi-numeric-4-box', 'icon_on': 'mdi-numeric-4-box', 'widget_style': 'background: darkgray;', 'title_style': 'color: #888;', 'button_icon_style_inactive': 'color: #888;', 'state_text': 1})
    
        widgets["default-kitchen-outside-speakers-group"] = new baseswitch_hor("default-kitchen-outside-speakers-group", "", "default", {'widget_type': 'baseswitch_hor', 'entity': 'input_boolean.kitchen_outside_speakers_group', 'state_active': 'on', 'state_inactive': 'off', 'enable': 1, 'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'input_boolean.kitchen_outside_speakers_group'}, 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'input_boolean.kitchen_outside_speakers_group'}, 'fields': {'title': 'Kitchen & Outside', 'title2': '', 'icon': '', 'icon_style': '', 'state_text': ''}, 'icons': {'icon_on': 'mdi-google-chrome', 'icon_off': 'mdi-google-chrome'}, 'static_icons': [], 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'state_text_style': 'color: #fff;', 'widget_style': 'background-color: #444;background: darkgray;'}, 'widget_style': 'background: darkgray;', 'icon_off': 'mdi-google-chrome', 'icon_on': 'mdi-google-chrome'})
    
        widgets["default-kitchen-bedroom-speaker-group"] = new baseswitch_hor("default-kitchen-bedroom-speaker-group", "", "default", {'widget_type': 'baseswitch_hor', 'entity': 'input_boolean.kitchen_bedroom_speakers_group', 'state_active': 'on', 'state_inactive': 'off', 'enable': 1, 'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'input_boolean.kitchen_bedroom_speakers_group'}, 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'input_boolean.kitchen_bedroom_speakers_group'}, 'fields': {'title': 'Kitchen & Bedroom', 'title2': '', 'icon': '', 'icon_style': '', 'state_text': ''}, 'icons': {'icon_on': 'mdi-google-chrome', 'icon_off': 'mdi-google-chrome'}, 'static_icons': [], 'css': {'icon_style_active': 'color: #aaff00;', 'icon_style_inactive': 'color: #888;'}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'state_text_style': 'color: #fff;', 'widget_style': 'background-color: #444;background: darkgray;'}, 'widget_style': 'background: darkgray;', 'icon_off': 'mdi-google-chrome', 'icon_on': 'mdi-google-chrome'})
    
        widgets["default-load-main-panel"] = new basenavigate("default-load-main-panel", "", "default", {'widget_type': 'basenavigate', 'fields': {'title': 'Home', 'title2': '', 'icon': '', 'icon_style': ''}, 'icons': {'icon_active': 'fa-spinner fa-spin', 'icon_inactive': 'fa-home'}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'css': {'icon_active_style': 'color: #fff;', 'icon_inactive_style': 'color: #fff;'}, 'static_icons': [], 'icon_inactive': 'fa-home', 'dashboard': 'Home-mobile'})
    
        widgets["default-load-familyroom-panel"] = new basenavigate("default-load-familyroom-panel", "", "default", {'widget_type': 'basenavigate', 'fields': {'title': 'Familyroom', 'title2': '', 'icon': '', 'icon_style': ''}, 'icons': {'icon_active': 'fa-spinner fa-spin', 'icon_inactive': 'mdi-windows'}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'css': {'icon_active_style': 'color: #fff;', 'icon_inactive_style': 'color: #fff;'}, 'static_icons': [], 'icon_inactive': 'mdi-windows', 'dashboard': 'Panel_FamilyRoom-mobile'})
    
        widgets["default-load-theatre-panel"] = new basenavigate("default-load-theatre-panel", "", "default", {'widget_type': 'basenavigate', 'fields': {'title': 'Theatre', 'title2': '', 'icon': '', 'icon_style': ''}, 'icons': {'icon_active': 'fa-spinner fa-spin', 'icon_inactive': 'mdi-theater'}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'css': {'icon_active_style': 'color: #fff;', 'icon_inactive_style': 'color: #fff;'}, 'static_icons': [], 'icon_inactive': 'mdi-theater', 'dashboard': 'Panel_Theatre-mobile'})
    
        widgets["default-load-bedroom-panel"] = new basenavigate("default-load-bedroom-panel", "", "default", {'widget_type': 'basenavigate', 'fields': {'title': 'Bedroom', 'title2': '', 'icon': '', 'icon_style': ''}, 'icons': {'icon_active': 'fa-spinner fa-spin', 'icon_inactive': 'fa-bed'}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'css': {'icon_active_style': 'color: #fff;', 'icon_inactive_style': 'color: #fff;'}, 'static_icons': [], 'icon_inactive': 'fa-bed', 'dashboard': 'Panel_Bedroom-mobile'})
    
        widgets["default-load-sensors-panel"] = new basenavigate("default-load-sensors-panel", "", "default", {'widget_type': 'basenavigate', 'fields': {'title': 'Sensors', 'title2': '', 'icon': '', 'icon_style': ''}, 'icons': {'icon_active': 'fa-spinner fa-spin', 'icon_inactive': 'mdi-gauge'}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'css': {'icon_active_style': 'color: #fff;', 'icon_inactive_style': 'color: #fff;'}, 'static_icons': [], 'icon_inactive': 'mdi-gauge', 'dashboard': 'Panel_Sensors-mobile'})
    
        widgets["default-load-weather"] = new basenavigate("default-load-weather", "", "default", {'widget_type': 'basenavigate', 'fields': {'title': 'Weather', 'title2': '', 'icon': '', 'icon_style': ''}, 'icons': {'icon_active': 'fa-spinner fa-spin', 'icon_inactive': 'mdi-weather-lightning-rainy'}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'css': {'icon_active_style': 'color: #fff;', 'icon_inactive_style': 'color: #fff;'}, 'static_icons': [], 'icon_inactive': 'mdi-weather-lightning-rainy', 'dashboard': 'Panel_Weather-mobile'})
    
        widgets["default-load-settings"] = new basenavigate("default-load-settings", "", "default", {'widget_type': 'basenavigate', 'fields': {'title': 'Settings', 'title2': '', 'icon': '', 'icon_style': ''}, 'icons': {'icon_active': 'fa-spinner fa-spin', 'icon_inactive': 'mdi-settings'}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'css': {'icon_active_style': 'color: #fff;', 'icon_inactive_style': 'color: #fff;'}, 'static_icons': [], 'icon_inactive': 'mdi-settings', 'dashboard': 'Panel_Settings-mobile'})
    
        widgets["default-reload"] = new basenavigate("default-reload", "", "default", {'widget_type': 'basenavigate', 'command': 'location.reload(true)', 'fields': {'title': 'Reload', 'title2': '', 'icon': '', 'icon_style': ''}, 'icons': {'icon_active': 'fa-spinner fa-spin', 'icon_inactive': 'fa-refresh'}, 'static_css': {'title_style': 'color: #fff;', 'title2_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'css': {'icon_active_style': 'color: #fff;', 'icon_inactive_style': 'color: #fff;'}, 'static_icons': []})
    

    // Setup click handler to cancel timeout navigations

    $( ".gridster" ).click(function(){
        clearTimeout(myTimeout);
    });

    // Set up timeout

    var myTimeout

    if (location.search != "")
    {
        var query = location.search.substr(1);
        var result = {};
        query.split("&").forEach(function(part) {
        var item = part.split("=");
        result[item[0]] = decodeURIComponent(item[1]);
        });

        if ("timeout" in result && "return" in result)
        {
            url = result.return
            argcount = 0
            for (arg in result)
            {
                if (arg != "timeout" && arg != "return")
                {
                    if (argcount == 0)
                    {
                        url += "?";
                    }
                    else
                    {
                        url += "?";
                    }
                    argcount ++;
                    url += arg + "=" + result[arg]
                }
            }
            myTimeout = setTimeout(function() { navigate(url); }, result.timeout * 1000);
        }
    }

    // Start listening for HA Events
    if (location.protocol == 'https:')
    {
        wsprot = "wss:"
    }
    else
    {
        wsprot = "ws:"
    }
    var stream_url = wsprot + '//' + location.host + '/stream'
    ha_status(stream_url, "Home", widgets);

});